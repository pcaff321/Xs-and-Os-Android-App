// Generated by view binder compiler. Do not edit!
package com.example.xsandos.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.xsandos.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMultiplayerViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button button00;

  @NonNull
  public final Button button01;

  @NonNull
  public final Button button02;

  @NonNull
  public final Button button10;

  @NonNull
  public final Button button11;

  @NonNull
  public final Button button12;

  @NonNull
  public final Button button20;

  @NonNull
  public final Button button21;

  @NonNull
  public final Button button22;

  @NonNull
  public final Button modeButton;

  @NonNull
  public final Button newGame;

  @NonNull
  public final TextView playerOneTitle;

  @NonNull
  public final TextView playerTwoTitle;

  private ActivityMultiplayerViewBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button button00, @NonNull Button button01, @NonNull Button button02,
      @NonNull Button button10, @NonNull Button button11, @NonNull Button button12,
      @NonNull Button button20, @NonNull Button button21, @NonNull Button button22,
      @NonNull Button modeButton, @NonNull Button newGame, @NonNull TextView playerOneTitle,
      @NonNull TextView playerTwoTitle) {
    this.rootView = rootView;
    this.button00 = button00;
    this.button01 = button01;
    this.button02 = button02;
    this.button10 = button10;
    this.button11 = button11;
    this.button12 = button12;
    this.button20 = button20;
    this.button21 = button21;
    this.button22 = button22;
    this.modeButton = modeButton;
    this.newGame = newGame;
    this.playerOneTitle = playerOneTitle;
    this.playerTwoTitle = playerTwoTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMultiplayerViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMultiplayerViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_multiplayer_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMultiplayerViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_00;
      Button button00 = ViewBindings.findChildViewById(rootView, id);
      if (button00 == null) {
        break missingId;
      }

      id = R.id.button_01;
      Button button01 = ViewBindings.findChildViewById(rootView, id);
      if (button01 == null) {
        break missingId;
      }

      id = R.id.button_02;
      Button button02 = ViewBindings.findChildViewById(rootView, id);
      if (button02 == null) {
        break missingId;
      }

      id = R.id.button_10;
      Button button10 = ViewBindings.findChildViewById(rootView, id);
      if (button10 == null) {
        break missingId;
      }

      id = R.id.button_11;
      Button button11 = ViewBindings.findChildViewById(rootView, id);
      if (button11 == null) {
        break missingId;
      }

      id = R.id.button_12;
      Button button12 = ViewBindings.findChildViewById(rootView, id);
      if (button12 == null) {
        break missingId;
      }

      id = R.id.button_20;
      Button button20 = ViewBindings.findChildViewById(rootView, id);
      if (button20 == null) {
        break missingId;
      }

      id = R.id.button_21;
      Button button21 = ViewBindings.findChildViewById(rootView, id);
      if (button21 == null) {
        break missingId;
      }

      id = R.id.button_22;
      Button button22 = ViewBindings.findChildViewById(rootView, id);
      if (button22 == null) {
        break missingId;
      }

      id = R.id.modeButton;
      Button modeButton = ViewBindings.findChildViewById(rootView, id);
      if (modeButton == null) {
        break missingId;
      }

      id = R.id.newGame;
      Button newGame = ViewBindings.findChildViewById(rootView, id);
      if (newGame == null) {
        break missingId;
      }

      id = R.id.playerOneTitle;
      TextView playerOneTitle = ViewBindings.findChildViewById(rootView, id);
      if (playerOneTitle == null) {
        break missingId;
      }

      id = R.id.playerTwoTitle;
      TextView playerTwoTitle = ViewBindings.findChildViewById(rootView, id);
      if (playerTwoTitle == null) {
        break missingId;
      }

      return new ActivityMultiplayerViewBinding((ConstraintLayout) rootView, button00, button01,
          button02, button10, button11, button12, button20, button21, button22, modeButton, newGame,
          playerOneTitle, playerTwoTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
